@charset "UTF-8";

/**
 * 函数
 */

//border-radius
@mixin print($declarations) {
    @each $property,$value in $declarations {
        #{$property}: $value
    }
}
@mixin border-radius($declarations:(border: 1px solid $bordercolor, border-radius: $border-radius)) {
    @include print($declarations);
    @media screen and (-webkit-min-device-pixel-ratio: 2) {
        position: relative;
        border: 0;
        &:before {
            content: "";
            width: 200%;
            height: 200%;
            position: absolute;
            top: 0;
            left: 0;
            -webkit-transform: scale(.5);
            -webkit-transform-origin: 0 0;
            padding: 1px;
            -webkit-box-sizing: border-box;
            pointer-events: none;
            @include print($declarations);
        }
    }
}
@mixin border-line($border-color: $main-border-color){
      border: none;
      background-image: linear-gradient(0deg, $border-color, $border-color 50%, transparent 50%);
      background-position: bottom;
      background-size: 100% 1px;
      background-repeat: no-repeat;
}


@mixin queryWidth( $min , $max ){
  @if $min == -1{
    @media screen and ( max-width: $max+px ) {
      html{
        font-size: ( ($max+1) / 375 ) * 100px;
      }
    }
  } @else if $max == -1{
    @media screen and ( min-width: $min+px ) {
      html{
        font-size: ( $min / 375 ) * 100px;
      }
    }
  } @else{
    @media screen and ( min-width: $min+px ) and ( max-width: $max+px ) {
      html{
        font-size: ( $min / 375 ) * 100px;
      }
    }
  }
}
@include queryWidth(-1,319);
@include queryWidth(320,359);
@include queryWidth(360,374);
@include queryWidth(375,383);
@include queryWidth(384,399);
@include queryWidth(400,413);
@include queryWidth(414,-1);

